html {
    box-sizing: border-box;
    /* считаются размеры не контента, а блока */
}

*,
*::before,
*::after {
    box-sizing: inherit;
    /* box-sizing по умолчанию не наследуется */
}

body {
    min-width: 320px;
    /* мин ширина страницы */
    margin: 0;
    /* сброс всех внешних отступов в 0 */
    background-color: #f9f9f9;
    /* дефолтный бэк под проект */
    font-family: "", Arial, sans-serif;
    /* дефолтный шрифт проекта плюс заменители*/
    font-size: 16px;
    /* дефолтный размер текста */
    font-weight: 400;
    /* дефолтная толщина шрифта */
    color: black;
    /* дефолтный цвет текста */
    line-height: 1;
    /* дефолтная высота строки */
}

button,
input {
    font: inherit;
    /* по умолчанию элементы формы не наследуют свойства шрифта */
}

img {
    max-width: 100%;
    /* изображения не будут растягиваться более 100% */
    height: auto;
    /* учитывая предыдущий пункт, сохранение пропорций */
}

a {
    text-decoration: none;
    /* в таблицах стилей брайзера установлдено дефолтное значение подчеркивания*/
    color: inherit;
    /* ссылки по умолчанию не наследуют это свойство */
}

ul,
ol {
    list-style: none;
    /* в таблицах стилей брайзера установлдено дефолтное значение значка пункта*/
}

h1,
h2,
h3,
p,
ul,
ol {
    padding: 0;
    margin: 0;
    /* по умолчанию заданы значения отступов - сбрасываем */
}


/* container */

.container {
    max-width: 1080px;
    /*задаем ширину контейнера под проект*/
    margin: 0 auto;
    /* центрирование по горизонтали */
    /* если добавить отступ внутренний у контейнер,
    то этот отступ нужно прибавить к контейнеру пример:
    padding: 0 30px; // 30 с двух сторон = 60 прибавили к max-width
    max-width: 1140px; 
    */
}

.visually-hidden {
    /* класс, использующий position: absolute 
    плюс clip, который обрезает элемент - 
    то есть он не влияет на соседей и 
    становится невидимым. overflow - убираем 
    полосу прокрутки. Все остальные 
    свойства добавляют универсальности и 
    кроссбраузерности, чтобы класс можно было 
    не глядя применить на любой элемент */
    position: absolute !important;
    /* !important нужен, чтобы в любом случае 
    (вне зависимости от специфичности, например) 
    применились свойства по этому классу */
    clip: rect(1px 1px 1px 1px);
    /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    /* ОБА значения top(верх) и bottom(низ) 
    определяют смещение от верхней границы, 
    а ОБА left(лево) и right(право) определяют 
    смещение от левой границы */
    clip-path: inset(50%);
    /* Поддержка браузером этого clip-path 
    свойства еще не так распространена */
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden;
}


/* при работе с float */

.clearfix::after {
    /* метод отмены действия float без 
    изменения структуры HTML-документа */
    content: "";
    display: table;
    /* контент делается табличным элементом 
    и у него отменяется действие float */
    clear: both;
    /* запрет обтекания плавающих элементов */
}